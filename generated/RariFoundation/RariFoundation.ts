// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Delegate extends ethereum.Event {
  get params(): Delegate__Params {
    return new Delegate__Params(this);
  }
}

export class Delegate__Params {
  _event: Delegate;

  constructor(event: Delegate) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DelegateChanged extends ethereum.Event {
  get params(): DelegateChanged__Params {
    return new DelegateChanged__Params(this);
  }
}

export class DelegateChanged__Params {
  _event: DelegateChanged;

  constructor(event: DelegateChanged) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fromDelegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get toDelegate(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DelegateVotesChanged extends ethereum.Event {
  get params(): DelegateVotesChanged__Params {
    return new DelegateVotesChanged__Params(this);
  }
}

export class DelegateVotesChanged__Params {
  _event: DelegateVotesChanged;

  constructor(event: DelegateVotesChanged) {
    this._event = event;
  }

  get delegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get previousBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LockCreate extends ethereum.Event {
  get params(): LockCreate__Params {
    return new LockCreate__Params(this);
  }
}

export class LockCreate__Params {
  _event: LockCreate;

  constructor(event: LockCreate) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get slopePeriod(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get cliff(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Migrate extends ethereum.Event {
  get params(): Migrate__Params {
    return new Migrate__Params(this);
  }
}

export class Migrate__Params {
  _event: Migrate;

  constructor(event: Migrate) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Relock extends ethereum.Event {
  get params(): Relock__Params {
    return new Relock__Params(this);
  }
}

export class Relock__Params {
  _event: Relock;

  constructor(event: Relock) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get counter(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get slopePeriod(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get cliff(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class SetMinCliffPeriod extends ethereum.Event {
  get params(): SetMinCliffPeriod__Params {
    return new SetMinCliffPeriod__Params(this);
  }
}

export class SetMinCliffPeriod__Params {
  _event: SetMinCliffPeriod;

  constructor(event: SetMinCliffPeriod) {
    this._event = event;
  }

  get newMinCliffPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetMinSlopePeriod extends ethereum.Event {
  get params(): SetMinSlopePeriod__Params {
    return new SetMinSlopePeriod__Params(this);
  }
}

export class SetMinSlopePeriod__Params {
  _event: SetMinSlopePeriod;

  constructor(event: SetMinSlopePeriod) {
    this._event = event;
  }

  get newMinSlopePeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetStartingPointWeek extends ethereum.Event {
  get params(): SetStartingPointWeek__Params {
    return new SetStartingPointWeek__Params(this);
  }
}

export class SetStartingPointWeek__Params {
  _event: SetStartingPointWeek;

  constructor(event: SetStartingPointWeek) {
    this._event = event;
  }

  get newStartingPointWeek(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StartLocking extends ethereum.Event {
  get params(): StartLocking__Params {
    return new StartLocking__Params(this);
  }
}

export class StartLocking__Params {
  _event: StartLocking;

  constructor(event: StartLocking) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class StartMigration extends ethereum.Event {
  get params(): StartMigration__Params {
    return new StartMigration__Params(this);
  }
}

export class StartMigration__Params {
  _event: StartMigration;

  constructor(event: StartMigration) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StopLocking extends ethereum.Event {
  get params(): StopLocking__Params {
    return new StopLocking__Params(this);
  }
}

export class StopLocking__Params {
  _event: StopLocking;

  constructor(event: StopLocking) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RariFoundation__getAccountAndDelegateResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  get_account(): Address {
    return this.value0;
  }

  get_delegate(): Address {
    return this.value1;
  }
}

export class RariFoundation__getLockResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getLockAmount(): BigInt {
    return this.value0;
  }

  getLockSlope(): BigInt {
    return this.value1;
  }
}

export class RariFoundation__totalSupplyLineResultInitialStruct extends ethereum.Tuple {
  get start(): BigInt {
    return this[0].toBigInt();
  }

  get bias(): BigInt {
    return this[1].toBigInt();
  }

  get slope(): BigInt {
    return this[2].toBigInt();
  }
}

export class RariFoundation extends ethereum.SmartContract {
  static bind(address: Address): RariFoundation {
    return new RariFoundation("RariFoundation", address);
  }

  WEEK(): BigInt {
    let result = super.call("WEEK", "WEEK():(uint256)", []);

    return result[0].toBigInt();
  }

  try_WEEK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("WEEK", "WEEK():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  counter(): BigInt {
    let result = super.call("counter", "counter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_counter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("counter", "counter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  delegates(account: Address): Address {
    let result = super.call("delegates", "delegates(address):(address)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toAddress();
  }

  try_delegates(account: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("delegates", "delegates(address):(address)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAccountAndDelegate(
    id: BigInt,
  ): RariFoundation__getAccountAndDelegateResult {
    let result = super.call(
      "getAccountAndDelegate",
      "getAccountAndDelegate(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(id)],
    );

    return new RariFoundation__getAccountAndDelegateResult(
      result[0].toAddress(),
      result[1].toAddress(),
    );
  }

  try_getAccountAndDelegate(
    id: BigInt,
  ): ethereum.CallResult<RariFoundation__getAccountAndDelegateResult> {
    let result = super.tryCall(
      "getAccountAndDelegate",
      "getAccountAndDelegate(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RariFoundation__getAccountAndDelegateResult(
        value[0].toAddress(),
        value[1].toAddress(),
      ),
    );
  }

  getAvailableForWithdraw(account: Address): BigInt {
    let result = super.call(
      "getAvailableForWithdraw",
      "getAvailableForWithdraw(address):(uint256)",
      [ethereum.Value.fromAddress(account)],
    );

    return result[0].toBigInt();
  }

  try_getAvailableForWithdraw(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAvailableForWithdraw",
      "getAvailableForWithdraw(address):(uint256)",
      [ethereum.Value.fromAddress(account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLock(
    amount: BigInt,
    slopePeriod: BigInt,
    cliff: BigInt,
  ): RariFoundation__getLockResult {
    let result = super.call(
      "getLock",
      "getLock(uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(slopePeriod),
        ethereum.Value.fromUnsignedBigInt(cliff),
      ],
    );

    return new RariFoundation__getLockResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getLock(
    amount: BigInt,
    slopePeriod: BigInt,
    cliff: BigInt,
  ): ethereum.CallResult<RariFoundation__getLockResult> {
    let result = super.tryCall(
      "getLock",
      "getLock(uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(slopePeriod),
        ethereum.Value.fromUnsignedBigInt(cliff),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RariFoundation__getLockResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  getPastTotalSupply(blockNumber: BigInt): BigInt {
    let result = super.call(
      "getPastTotalSupply",
      "getPastTotalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(blockNumber)],
    );

    return result[0].toBigInt();
  }

  try_getPastTotalSupply(blockNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPastTotalSupply",
      "getPastTotalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(blockNumber)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPastVotes(account: Address, blockNumber: BigInt): BigInt {
    let result = super.call(
      "getPastVotes",
      "getPastVotes(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(blockNumber),
      ],
    );

    return result[0].toBigInt();
  }

  try_getPastVotes(
    account: Address,
    blockNumber: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPastVotes",
      "getPastVotes(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(blockNumber),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVotes(account: Address): BigInt {
    let result = super.call("getVotes", "getVotes(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBigInt();
  }

  try_getVotes(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getVotes", "getVotes(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWeek(): BigInt {
    let result = super.call("getWeek", "getWeek():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getWeek(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getWeek", "getWeek():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lock(
    account: Address,
    _delegate: Address,
    amount: BigInt,
    slopePeriod: BigInt,
    cliff: BigInt,
  ): BigInt {
    let result = super.call(
      "lock",
      "lock(address,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(_delegate),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(slopePeriod),
        ethereum.Value.fromUnsignedBigInt(cliff),
      ],
    );

    return result[0].toBigInt();
  }

  try_lock(
    account: Address,
    _delegate: Address,
    amount: BigInt,
    slopePeriod: BigInt,
    cliff: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lock",
      "lock(address,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(_delegate),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(slopePeriod),
        ethereum.Value.fromUnsignedBigInt(cliff),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  locked(account: Address): BigInt {
    let result = super.call("locked", "locked(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBigInt();
  }

  try_locked(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("locked", "locked(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  migrateTo(): Address {
    let result = super.call("migrateTo", "migrateTo():(address)", []);

    return result[0].toAddress();
  }

  try_migrateTo(): ethereum.CallResult<Address> {
    let result = super.tryCall("migrateTo", "migrateTo():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minCliffPeriod(): BigInt {
    let result = super.call("minCliffPeriod", "minCliffPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minCliffPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minCliffPeriod",
      "minCliffPeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minSlopePeriod(): BigInt {
    let result = super.call("minSlopePeriod", "minSlopePeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minSlopePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minSlopePeriod",
      "minSlopePeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  relock(
    id: BigInt,
    newDelegate: Address,
    newAmount: BigInt,
    newSlopePeriod: BigInt,
    newCliff: BigInt,
  ): BigInt {
    let result = super.call(
      "relock",
      "relock(uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromAddress(newDelegate),
        ethereum.Value.fromUnsignedBigInt(newAmount),
        ethereum.Value.fromUnsignedBigInt(newSlopePeriod),
        ethereum.Value.fromUnsignedBigInt(newCliff),
      ],
    );

    return result[0].toBigInt();
  }

  try_relock(
    id: BigInt,
    newDelegate: Address,
    newAmount: BigInt,
    newSlopePeriod: BigInt,
    newCliff: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "relock",
      "relock(uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromAddress(newDelegate),
        ethereum.Value.fromUnsignedBigInt(newAmount),
        ethereum.Value.fromUnsignedBigInt(newSlopePeriod),
        ethereum.Value.fromUnsignedBigInt(newCliff),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  roundTimestamp(ts: BigInt): BigInt {
    let result = super.call(
      "roundTimestamp",
      "roundTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(ts)],
    );

    return result[0].toBigInt();
  }

  try_roundTimestamp(ts: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "roundTimestamp",
      "roundTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(ts)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  startingPointWeek(): BigInt {
    let result = super.call(
      "startingPointWeek",
      "startingPointWeek():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_startingPointWeek(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startingPointWeek",
      "startingPointWeek():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stopped(): boolean {
    let result = super.call("stopped", "stopped():(bool)", []);

    return result[0].toBoolean();
  }

  try_stopped(): ethereum.CallResult<boolean> {
    let result = super.tryCall("stopped", "stopped():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupplyLine(): RariFoundation__totalSupplyLineResultInitialStruct {
    let result = super.call(
      "totalSupplyLine",
      "totalSupplyLine():((uint256,uint256,uint256))",
      [],
    );

    return changetype<RariFoundation__totalSupplyLineResultInitialStruct>(
      result[0].toTuple(),
    );
  }

  try_totalSupplyLine(): ethereum.CallResult<RariFoundation__totalSupplyLineResultInitialStruct> {
    let result = super.tryCall(
      "totalSupplyLine",
      "totalSupplyLine():((uint256,uint256,uint256))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RariFoundation__totalSupplyLineResultInitialStruct>(
        value[0].toTuple(),
      ),
    );
  }
}

export class __Locking_initCall extends ethereum.Call {
  get inputs(): __Locking_initCall__Inputs {
    return new __Locking_initCall__Inputs(this);
  }

  get outputs(): __Locking_initCall__Outputs {
    return new __Locking_initCall__Outputs(this);
  }
}

export class __Locking_initCall__Inputs {
  _call: __Locking_initCall;

  constructor(call: __Locking_initCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _startingPointWeek(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minCliffPeriod(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minSlopePeriod(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class __Locking_initCall__Outputs {
  _call: __Locking_initCall;

  constructor(call: __Locking_initCall) {
    this._call = call;
  }
}

export class DelegateCall extends ethereum.Call {
  get inputs(): DelegateCall__Inputs {
    return new DelegateCall__Inputs(this);
  }

  get outputs(): DelegateCall__Outputs {
    return new DelegateCall__Outputs(this);
  }
}

export class DelegateCall__Inputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }

  get delegatee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DelegateCall__Outputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }
}

export class DelegateBySigCall extends ethereum.Call {
  get inputs(): DelegateBySigCall__Inputs {
    return new DelegateBySigCall__Inputs(this);
  }

  get outputs(): DelegateBySigCall__Outputs {
    return new DelegateBySigCall__Outputs(this);
  }
}

export class DelegateBySigCall__Inputs {
  _call: DelegateBySigCall;

  constructor(call: DelegateBySigCall) {
    this._call = call;
  }

  get delegatee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class DelegateBySigCall__Outputs {
  _call: DelegateBySigCall;

  constructor(call: DelegateBySigCall) {
    this._call = call;
  }
}

export class DelegateToCall extends ethereum.Call {
  get inputs(): DelegateToCall__Inputs {
    return new DelegateToCall__Inputs(this);
  }

  get outputs(): DelegateToCall__Outputs {
    return new DelegateToCall__Outputs(this);
  }
}

export class DelegateToCall__Inputs {
  _call: DelegateToCall;

  constructor(call: DelegateToCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newDelegate(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DelegateToCall__Outputs {
  _call: DelegateToCall;

  constructor(call: DelegateToCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _delegate(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get slopePeriod(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get cliff(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MigrateCall extends ethereum.Call {
  get inputs(): MigrateCall__Inputs {
    return new MigrateCall__Inputs(this);
  }

  get outputs(): MigrateCall__Outputs {
    return new MigrateCall__Outputs(this);
  }
}

export class MigrateCall__Inputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }

  get id(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class MigrateCall__Outputs {
  _call: MigrateCall;

  constructor(call: MigrateCall) {
    this._call = call;
  }
}

export class RelockCall extends ethereum.Call {
  get inputs(): RelockCall__Inputs {
    return new RelockCall__Inputs(this);
  }

  get outputs(): RelockCall__Outputs {
    return new RelockCall__Outputs(this);
  }
}

export class RelockCall__Inputs {
  _call: RelockCall;

  constructor(call: RelockCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newDelegate(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get newSlopePeriod(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get newCliff(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class RelockCall__Outputs {
  _call: RelockCall;

  constructor(call: RelockCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMinCliffPeriodCall extends ethereum.Call {
  get inputs(): SetMinCliffPeriodCall__Inputs {
    return new SetMinCliffPeriodCall__Inputs(this);
  }

  get outputs(): SetMinCliffPeriodCall__Outputs {
    return new SetMinCliffPeriodCall__Outputs(this);
  }
}

export class SetMinCliffPeriodCall__Inputs {
  _call: SetMinCliffPeriodCall;

  constructor(call: SetMinCliffPeriodCall) {
    this._call = call;
  }

  get newMinCliffPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinCliffPeriodCall__Outputs {
  _call: SetMinCliffPeriodCall;

  constructor(call: SetMinCliffPeriodCall) {
    this._call = call;
  }
}

export class SetMinSlopePeriodCall extends ethereum.Call {
  get inputs(): SetMinSlopePeriodCall__Inputs {
    return new SetMinSlopePeriodCall__Inputs(this);
  }

  get outputs(): SetMinSlopePeriodCall__Outputs {
    return new SetMinSlopePeriodCall__Outputs(this);
  }
}

export class SetMinSlopePeriodCall__Inputs {
  _call: SetMinSlopePeriodCall;

  constructor(call: SetMinSlopePeriodCall) {
    this._call = call;
  }

  get newMinSlopePeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinSlopePeriodCall__Outputs {
  _call: SetMinSlopePeriodCall;

  constructor(call: SetMinSlopePeriodCall) {
    this._call = call;
  }
}

export class SetStartingPointWeekCall extends ethereum.Call {
  get inputs(): SetStartingPointWeekCall__Inputs {
    return new SetStartingPointWeekCall__Inputs(this);
  }

  get outputs(): SetStartingPointWeekCall__Outputs {
    return new SetStartingPointWeekCall__Outputs(this);
  }
}

export class SetStartingPointWeekCall__Inputs {
  _call: SetStartingPointWeekCall;

  constructor(call: SetStartingPointWeekCall) {
    this._call = call;
  }

  get newStartingPointWeek(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStartingPointWeekCall__Outputs {
  _call: SetStartingPointWeekCall;

  constructor(call: SetStartingPointWeekCall) {
    this._call = call;
  }
}

export class StartCall extends ethereum.Call {
  get inputs(): StartCall__Inputs {
    return new StartCall__Inputs(this);
  }

  get outputs(): StartCall__Outputs {
    return new StartCall__Outputs(this);
  }
}

export class StartCall__Inputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }
}

export class StartCall__Outputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }
}

export class StartMigrationCall extends ethereum.Call {
  get inputs(): StartMigrationCall__Inputs {
    return new StartMigrationCall__Inputs(this);
  }

  get outputs(): StartMigrationCall__Outputs {
    return new StartMigrationCall__Outputs(this);
  }
}

export class StartMigrationCall__Inputs {
  _call: StartMigrationCall;

  constructor(call: StartMigrationCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class StartMigrationCall__Outputs {
  _call: StartMigrationCall;

  constructor(call: StartMigrationCall) {
    this._call = call;
  }
}

export class StopCall extends ethereum.Call {
  get inputs(): StopCall__Inputs {
    return new StopCall__Inputs(this);
  }

  get outputs(): StopCall__Outputs {
    return new StopCall__Outputs(this);
  }
}

export class StopCall__Inputs {
  _call: StopCall;

  constructor(call: StopCall) {
    this._call = call;
  }
}

export class StopCall__Outputs {
  _call: StopCall;

  constructor(call: StopCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAccountLinesCall extends ethereum.Call {
  get inputs(): UpdateAccountLinesCall__Inputs {
    return new UpdateAccountLinesCall__Inputs(this);
  }

  get outputs(): UpdateAccountLinesCall__Outputs {
    return new UpdateAccountLinesCall__Outputs(this);
  }
}

export class UpdateAccountLinesCall__Inputs {
  _call: UpdateAccountLinesCall;

  constructor(call: UpdateAccountLinesCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get time(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateAccountLinesCall__Outputs {
  _call: UpdateAccountLinesCall;

  constructor(call: UpdateAccountLinesCall) {
    this._call = call;
  }
}

export class UpdateAccountLinesBlockNumberCall extends ethereum.Call {
  get inputs(): UpdateAccountLinesBlockNumberCall__Inputs {
    return new UpdateAccountLinesBlockNumberCall__Inputs(this);
  }

  get outputs(): UpdateAccountLinesBlockNumberCall__Outputs {
    return new UpdateAccountLinesBlockNumberCall__Outputs(this);
  }
}

export class UpdateAccountLinesBlockNumberCall__Inputs {
  _call: UpdateAccountLinesBlockNumberCall;

  constructor(call: UpdateAccountLinesBlockNumberCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get blockNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateAccountLinesBlockNumberCall__Outputs {
  _call: UpdateAccountLinesBlockNumberCall;

  constructor(call: UpdateAccountLinesBlockNumberCall) {
    this._call = call;
  }
}

export class UpdateTotalSupplyLineCall extends ethereum.Call {
  get inputs(): UpdateTotalSupplyLineCall__Inputs {
    return new UpdateTotalSupplyLineCall__Inputs(this);
  }

  get outputs(): UpdateTotalSupplyLineCall__Outputs {
    return new UpdateTotalSupplyLineCall__Outputs(this);
  }
}

export class UpdateTotalSupplyLineCall__Inputs {
  _call: UpdateTotalSupplyLineCall;

  constructor(call: UpdateTotalSupplyLineCall) {
    this._call = call;
  }

  get time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateTotalSupplyLineCall__Outputs {
  _call: UpdateTotalSupplyLineCall;

  constructor(call: UpdateTotalSupplyLineCall) {
    this._call = call;
  }
}

export class UpdateTotalSupplyLineBlockNumberCall extends ethereum.Call {
  get inputs(): UpdateTotalSupplyLineBlockNumberCall__Inputs {
    return new UpdateTotalSupplyLineBlockNumberCall__Inputs(this);
  }

  get outputs(): UpdateTotalSupplyLineBlockNumberCall__Outputs {
    return new UpdateTotalSupplyLineBlockNumberCall__Outputs(this);
  }
}

export class UpdateTotalSupplyLineBlockNumberCall__Inputs {
  _call: UpdateTotalSupplyLineBlockNumberCall;

  constructor(call: UpdateTotalSupplyLineBlockNumberCall) {
    this._call = call;
  }

  get blockNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateTotalSupplyLineBlockNumberCall__Outputs {
  _call: UpdateTotalSupplyLineBlockNumberCall;

  constructor(call: UpdateTotalSupplyLineBlockNumberCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
